.g-checkbox {
  input {
    @extend .hidden;

    &:checked + label {
      &::before {
        background: url("/static/svgs/icons/checkmark.svg") no-repeat center;
        background-color: $shade-blue;
        border: 0.5px solid $primary-blue;
      }

      &:hover {
        &::before {
          background-color: $primary-sky-blue;
        }
      }
    }

    &:not(:checked) {
      &.disabled,
      &:disabled {
        + label::before {
          background-color: $ntr-light-03;
          border-color: $ntr-light-03;
          background-image: none;
        }
      }
    }

    &.disabled,
    &:disabled {
      + label {
        cursor: not-allowed;
      }
    }

    &:checked {
      &.disabled,
      &:disabled {
        + label {
          &::before {
            background-color: $ntr-light-03 !important;
            border-color: $ntr-light-03;
            background: url("/static/svgs/icons/checkmark-disabled.svg") no-repeat center;
          }
        }
      }
    }
  }

  label {
    position: relative;
    min-height: rem(22);
    min-width: rem(22);
    height: 100%;
    cursor: pointer;
    padding-left: rem(34);
    @include font-size(14, 400);
    line-height: 1.3;
    letter-spacing: 0.02em;
    color: $primary-black;
    user-select: none;

    &:hover {
      &::before {
        border-color: $ntr-light-01;
      }
    }

    @include pseudo() {
      top: rem(-2);
      left: 0;
      @include box(22);
      @include advancedRem(background-size, (12 8));
      background-color: $white;
      background-position: center;
      border-radius: rem(4);
      border: 1.6px solid $ntr-light-02;
      @include transition();
    }
  }
}

.g-radio {
  input {
    @extend .hidden;

    &.disabled,
    &:disabled {
      + label {
        cursor: not-allowed;

        &::before {
          background-color: $ntr-light-03 !important;
          border-color: $ntr-light-03 !important;
        }
      }
    }

    &:not(:checked) {
      + label {
        &::before {
          border: rem(2) solid $ntr-light-02;
          background-color: $white;
        }

        &::after {
          opacity: 0;
        }
      }
    }

    &:checked {
      + label {
        &:hover {
          &::before {
            background-color: $primary-sky-blue;
          }
        }
      }
    }

    &:checked {
      &:disabled,
      &.disabled {
        + label {
          &::after {
            background-color: $ntr-light-01;
          }

          &::before {
            background-color: $ntr-light-03;
            border-color: $ntr-light-03;
          }
        }
      }
    }
  }

  label {
    position: relative;
    padding-left: rem(34);
    cursor: pointer;
    min-height: rem(22);
    min-width: rem(22);
    @include font-size(15, 400);
    line-height: 1.7;
    color: $ntr-dark-01;
    letter-spacing: 0.02em;

    @include pseudo() {
      left: 0;
      @include box(22);
      border-radius: 50%;
      background-color: $shade-blue;
      border: 0.5px solid $primary-blue;
    }

    @include pseudo(after) {
      left: rem(4.75);
      top: rem(4.75);
      border-radius: 50%;
      @include box(12);
      background-color: $primary-blue;
      @include transition();
    }
  }
}

.g-switch {
  input {
    @extend .hidden;

    &:checked {
      + label {
        &::before {
          background-color: $primary-blue;
          border-color: $primary-blue;
        }

        &::after {
          background-color: $white;
          border-color: $white;
          transform: translateX(#{rem(24)});
        }
      }
    }

    &:disabled,
    &.disabled {
      + label {
        cursor: not-allowed;

        &::before {
          background-color: $ntr-light-03;
          border: rem(1) solid $ntr-light-02;
        }

        &::after {
          background-color: $ntr-light-01;
        }
      }
    }
  }

  label {
    position: relative;
    cursor: pointer;
    @include transition();
    min-width: rem(48);
    min-height: rem(24);
    padding-right: rem(82);
    @include font-size(14, 400);
    line-height: 1.3;
    letter-spacing: 0.02em;
    color: $primary-black;

    &::before,
    &::after {
      @include transition();
    }

    @include pseudo() {
      width: rem(48);
      right: 0;
      height: rem(24);
      border: rem(1) solid $ntr-light-01;
      border-radius: rem(40);
      background-color: $white;
    }

    @include pseudo(after) {
      background-color: $ntr-light-01;
      border-radius: 50%;
      @include box(20);
      top: rem(2);
      right: rem(26);
    }
  }
}

.g-form-group {
  @include flexbox(column);

  &__md {
    max-width: rem(360);
    width: 100%;
  }

  &__lg {
    max-width: rem(450);
    width: 100%;
  }

  &-wrapper {
    &__two-item {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(#{rem(162)}, 1fr));
      grid-gap: rem(30);

      .g-select-control,
      .g-input {
        height: rem(56);
      }

    }
  }

  &.disabled {
    .g-label {
      color: $ntr-light-01;
    }

    .g-input {
      color: $ntr-light-01;
      background-color: $ntr-light-03;

      &::placeholder {
        opacity: 0.5;
        color: $ntr-light-01;
      }
    }
  }

  &__row {
    flex-direction: row;
    align-items: center;
    grid-gap: rem(30);
  }
}

.g-label {
  font-weight: normal;
  @include font-size(14, 400);
  line-height: 1.3;
  letter-spacing: 0.02em;
  color: $ntr-dark-01;
  margin-bottom: rem(8);
}

.g-input {
  @include advancedRem(padding, (15 24));
  background: $ntr-light-04;
  border-radius: 16px;
  border: none;
  outline: none;
  color: $ntr-dark-01;
  @include font-size(15, 400);
  line-height: 1.7;
  letter-spacing: 0.02em;
  margin-bottom: rem(12);

  &::placeholder {
    @include font-size(15, 400);
    line-height: 1.7;
    letter-spacing: 0.02em;
    color: $ntr-dark-03;
    opacity: 1;
  }

  &.disabled,
  &:disabled {
    color: $ntr-dark-03;
    background-color: $ntr-light-04;

    &::placeholder {
      opacity: 0.5;
      color: $ntr-light-01;
    }
  }

  &-complex {
    @extend .g-input;
    padding: 0;
    display: flex;
    align-items: stretch;
    overflow: hidden;
    height: rem(48);
    border-radius: rem(8);
    margin-bottom: 0;

    input {
      background-color: transparent;
      border: none;
      padding: rem(12);

      &::placeholder {
        @include font-size(15, 400);
        line-height: 1.7;
        letter-spacing: 0.02em;
        color: $ntr-dark-03;
        opacity: 1;
      }
    }

    span {
      @include flex-center();
      padding: rem(12);
    }
  }
}

.g-password-field {
  display: grid;
  grid-template-columns: 1fr rem(30);

  @extend .g-input;

  button,
  input {
    background-color: transparent;
    border: none;
    outline: none;
  }
}

.g-textarea {
  @extend .g-input;
  min-height: rem(100);
  max-height: rem(490);
  resize: none;
}

.phone-input {
  $this: &;
  background: $ntr-light-04;
  border-radius: 16px;
  border: none;
  outline: none;
  color: $ntr-dark-01;
  @include font-size(15, 400);
  line-height: 1.7;
  letter-spacing: 0.02em;
  display: grid;
  grid-template-columns: rem(125) 1fr;

  & + #{$this} {
    margin-top: rem(12);
  }

  &::placeholder {
    @include font-size(15, 400);
    line-height: 1.7;
    letter-spacing: 0.02em;
    color: $ntr-dark-03;
    opacity: 1;
  }

  &.disabled,
  &:disabled {
    color: $ntr-dark-03;
    background-color: $ntr-light-04;

    &::placeholder {
      opacity: 0.5;
      color: $ntr-light-01;
    }
  }

  input {
    background-color: transparent;
    border: none;

    &::placeholder {
      @include font-size(15, 400);
      line-height: 1.7;
      letter-spacing: 0.02em;
      color: $ntr-dark-03;
      opacity: 1;
    }
  }

  span {
    @include flex-center();
    padding: rem(12);
  }

  &__grid {
    display: flex;
    grid-gap: rem(30);

    .g-btn-count {
      margin-top: rem(24);
    }
  }
}

.range-value-inputs {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  border-radius: rem(8);
  height: rem(48);
  background-color: $ntr-light-04;

  &__item {
    display: flex;
    align-items: stretch;

    &:first-child {
      border-right: rem(1) solid $ntr-light-02;
    }

    input,
    label {
      height: 100%;
      background-color: transparent;
      @include font-size(15, 400);
      color: $ntr-dark-01;
      letter-spacing: 0.02em;
      @include advancedRem(padding, (0 12 0 4))
    }

    input {
      width: 100%;
      @include advancedRem(padding, (4, 16));
      flex: 1;
      border: none;
      outline: none;

      &::placeholder {
        color: $ntr-dark-03;
      }
    }

    label {
      display: grid;
      place-items: center;
    }
  }
}

@keyframes fade-in {
  from {
    opacity: 0;
    visibility: hidden;
  }

  to {
    opacity: 1;
    visibility: visible;
  }
}

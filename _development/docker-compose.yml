version: "3.9"

# NOTE: If you want to connect db from SQL Management studio :
# Server name: localhost, 1433
# Authentication : SQL Server Authentication
# Login : sa
# Password : LocalDevPassword123
services:
  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    environment:
      SA_PASSWORD: "LocalDevPassword123"
      ACCEPT_EULA: "Y"

  api:
    container_name: "api"
    volumes:
      - api-data:/app/wwwroot
    build:
      context: ../backend
      dockerfile: API/Dockerfile
    ports:
      - "5000:5000"
    depends_on:
      - "sql-server-db"
    environment:
      ASPNETCORE_URLS: "http://+:5000"
      SQL_SERVER_NAME: "sql-server-db"
      SQL_DATABASE: "master"
      SQL_USER: "sa"
      SQL_PASSWORD: "LocalDevPassword123"

  web-admin:
    container_name: "web-admin"
    volumes:
      - web-admin-data:/app/wwwroot
    build:
      context: ../backend
      dockerfile: Web/Dockerfile

    ports:
      - "5001:5001"
    depends_on:
      - "sql-server-db"
    environment:
      ASPNETCORE_URLS: "http://+:5001"
      SQL_SERVER_NAME: "sql-server-db"
      SQL_DATABASE: "master"
      SQL_USER: "sa"
      SQL_PASSWORD: "LocalDevPassword123"

  web-client:
    container_name: "web-client"
    volumes:
      - web-client-data:/app
      # - ./:/app
      # - /app/node_modules
      # - /app/.next
      # - /app/public
      # - /app/package.json
    # restart: always
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

volumes:
  api-data:
  web-admin-data:
  web-client-data:

@using Web.Areas.Admin.ViewModels.UserManagement.User
@using Microsoft.AspNetCore.Authorization

@model UserListViewModel
@inject IAuthorizationService _authorizationService

@{
    ViewData["Title"] = "Users";
}

<div class="row">
    <div class="col-sm-12">
        <div class="page-title-box">
            <h4 class="page-title">Users</h4>
        </div>
        <!--end page-title-box-->
    </div>
    <!--end col-->
</div>

@await Component.InvokeAsync("ActionResultMessage")

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <div class="row justify-content-between">
                    <div class="col-3">
                        <div class="hide-phone app-search">
                            <form id="search-form" asp-route="admin-user-search" method="GET">
                                @Html.TextBox("q", "", new { @class = "form-control top-search", @type = "search", @placeholder = "Type text..." })
                                <button type="submit"><i class="ti ti-search"></i></button>
                            </form>
                        </div>
                    </div>
                    @if ((await _authorizationService.AuthorizeAsync(User, "UserCreatePolicy")).Succeeded)
                    {
                        <div class="col-2">
                            <a asp-controller="user" asp-action="create" asp-area="admin" type="button" class="btn btn-primary">
                                + New User
                            </a>
                        </div>
                    }
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="users-table" class="table table-striped mb-0 ">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>
                                    <span class="mr-1" style="pointer-events: none;">@Html.DisplayNameFor(x => x.Users.GetEnumerator().Current.Email)</span>
                                </th>
                                <th>
                                    <span class="mr-1" style="pointer-events: none;">@Html.DisplayNameFor(x => x.Users.GetEnumerator().Current.EmailConfirmed)</span>
                                </th>
                                <th>
                                    <span class="mr-1" style="pointer-events: none;">@Html.DisplayNameFor(x => x.Users.GetEnumerator().Current.IsAdmin)</span>
                                </th>
                                <th>
                                    <span class="mr-1" style="pointer-events: none;">@Html.DisplayNameFor(x => x.Users.GetEnumerator().Current.JoinedAt)</span>
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                int rowCounter = 0;
                                foreach (var user in Model.Users)
                                {
                                    rowCounter++;

                                    <tr>
                                        <td>
                                            @rowCounter
                                        </td>
                                        <td>@user.Email</td>
                                        <td>@await Component.InvokeAsync("BooleanResult", new { result = user.EmailConfirmed })</td>
                                        <td>@await Component.InvokeAsync("BooleanResult", new { result = user.IsAdmin })</td>
                                        <td class="localize-date" data-format="DD/MM/yyyy HH:mm:ss">@user.JoinedAt.ToString("o")</td>
                                        <td>
                                            @if ((await _authorizationService.AuthorizeAsync(User, "UserEditPolicy")).Succeeded)
                                            {
                                                <a asp-controller="user" asp-action="edit" asp-area="admin" asp-route-id="@user.ID" class="mr-2"><i class="las la-pen text-secondary font-18"></i></a>
                                            }
                                            @if ((await _authorizationService.AuthorizeAsync(User, "UserDeletePolicy")).Succeeded)
                                            {
                                                <a asp-controller="user" asp-action="delete" asp-area="admin" asp-route-id="@user.ID" onclick="return confirm('Are you sure to delete?')" class="mr-2"><i class="las la-trash-alt text-danger font-22"></i></a>
                                            }
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div><!--end /tableresponsive-->
            </div><!--end card-body-->
        </div><!--end card-->
    </div> <!-- end col -->
</div>
